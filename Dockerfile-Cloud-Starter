FROM golang:1.18 as build

WORKDIR /wundergraph

ENV GOPROXY https://proxy.golang.org

# Copy api module
COPY ./go.mod ./go.mod
COPY ./go.sum ./go.sum
RUN go mod download

# Copy builder source code
ENV CGO_ENABLED=0

COPY cmd ./cmd
COPY cli ./cli
COPY pkg ./pkg
COPY internal ./internal
RUN cd cmd/wunderctl && go install

FROM ghcr.io/wundergraph/cloud-build-runner:node-18 as runner

WORKDIR /app
ENV CI=true WG_CLOUD=true WG_NODE_URL=http://localhost:9991 WG_NODE_HOST=0.0.0.0 WG_NODE_PORT=9991 WG_SERVER_URL=http://localhost:9992 WG_SERVER_HOST=127.0.0.1 WG_SERVER_PORT=9992
COPY testapps/cloud-starter/package.json testapps/cloud-starter/package-lock.json /app/
RUN npm ci --cache /root/cache/npm --prefer-offline --no-audit
COPY testapps/cloud-starter /app
COPY --from=build /go/bin/wunderctl /usr/local/bin/wunderctl
WORKDIR /app
RUN wunderctl generate --pretty-logging=true --wundergraph-dir=.wundergraph

ENV NODE_ENV=production CI=false START_HOOKS_SERVER=true WG_ABS_DIR=/app/.wundergraph WG_NODE_URL=http://localhost:9991 WG_NODE_HOST=0.0.0.0 WG_NODE_PORT=9991 WG_SERVER_URL=http://localhost:9992 WG_SERVER_HOST=127.0.0.1 WG_SERVER_PORT=9992

CMD ["/bin/sh","-c","node .wundergraph/generated/bundle/server.js & wunderctl start --exclude-server --pretty-logging=false --shutdown-after-idle=10 --wundergraph-dir=.wundergraph"]
